name: Test and release linux / web

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write # for committing to gh-pages branch.  

jobs:
  verify:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@v2
        with:
          tool: just@1  
      - run: just verify

  release:
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - uses: actions/setup-node@v4
        with:
          node-version: 21   
      - uses: taiki-e/install-action@cargo-binstall
      - run: cargo binstall --no-confirm --force cargo-edit
      - uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REL }}
      - run: just release
        env:
          GITHUB_TOKEN: ${{ secrets.REL }}
  build-github-pages:
    needs: verify
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Restore cache
          uses: actions/cache@v3
          with:
            path: |
              ~/.cargo/bin
              ~/.cargo/git
              ~/.cargo/registry
              target
            key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  
        - name: Install dependencies
          run: |
            cargo install trunk || true \
              && rustup target add wasm32-unknown-unknown
  
        - name: Build the Rust WASM app and all of its assets
          run: trunk build --public-url ${{ github.event.repository.name }}
  
        - name: Setup Pages
          uses: actions/configure-pages@v2
        - name: Upload artifact
          uses: actions/upload-pages-artifact@v1
          with:
            path: './dist'
  
  deploy:
    needs: build-github-pages
  
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
  
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1     